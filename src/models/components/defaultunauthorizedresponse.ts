/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const DefaultUnauthorizedResponseError = {
    InvalidUsernamePasswordOrAccessToken: "Invalid username, password, or access token",
} as const;
export type DefaultUnauthorizedResponseError = ClosedEnum<typeof DefaultUnauthorizedResponseError>;

/**
 * The given access token is invalid
 */
export type DefaultUnauthorizedResponse = {
    success?: boolean | undefined;
    error: DefaultUnauthorizedResponseError;
};

/** @internal */
export const DefaultUnauthorizedResponseError$inboundSchema: z.ZodNativeEnum<
    typeof DefaultUnauthorizedResponseError
> = z.nativeEnum(DefaultUnauthorizedResponseError);

/** @internal */
export const DefaultUnauthorizedResponseError$outboundSchema: z.ZodNativeEnum<
    typeof DefaultUnauthorizedResponseError
> = DefaultUnauthorizedResponseError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DefaultUnauthorizedResponseError$ {
    /** @deprecated use `DefaultUnauthorizedResponseError$inboundSchema` instead. */
    export const inboundSchema = DefaultUnauthorizedResponseError$inboundSchema;
    /** @deprecated use `DefaultUnauthorizedResponseError$outboundSchema` instead. */
    export const outboundSchema = DefaultUnauthorizedResponseError$outboundSchema;
}

/** @internal */
export const DefaultUnauthorizedResponse$inboundSchema: z.ZodType<
    DefaultUnauthorizedResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(false),
    error: DefaultUnauthorizedResponseError$inboundSchema,
});

/** @internal */
export type DefaultUnauthorizedResponse$Outbound = {
    success: boolean;
    error: string;
};

/** @internal */
export const DefaultUnauthorizedResponse$outboundSchema: z.ZodType<
    DefaultUnauthorizedResponse$Outbound,
    z.ZodTypeDef,
    DefaultUnauthorizedResponse
> = z.object({
    success: z.boolean().default(false),
    error: DefaultUnauthorizedResponseError$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DefaultUnauthorizedResponse$ {
    /** @deprecated use `DefaultUnauthorizedResponse$inboundSchema` instead. */
    export const inboundSchema = DefaultUnauthorizedResponse$inboundSchema;
    /** @deprecated use `DefaultUnauthorizedResponse$outboundSchema` instead. */
    export const outboundSchema = DefaultUnauthorizedResponse$outboundSchema;
    /** @deprecated use `DefaultUnauthorizedResponse$Outbound` instead. */
    export type Outbound = DefaultUnauthorizedResponse$Outbound;
}
