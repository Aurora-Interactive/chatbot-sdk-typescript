/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const MessageRole = {
    System: "system",
    User: "user",
    Assistant: "assistant",
} as const;
export type MessageRole = ClosedEnum<typeof MessageRole>;

export type Message = {
    role: MessageRole;
    content: string;
};

/** @internal */
export namespace MessageRole$ {
    export const inboundSchema: z.ZodNativeEnum<typeof MessageRole> = z.nativeEnum(MessageRole);
    export const outboundSchema: z.ZodNativeEnum<typeof MessageRole> = inboundSchema;
}

/** @internal */
export namespace Message$ {
    export const inboundSchema: z.ZodType<Message, z.ZodTypeDef, unknown> = z.object({
        role: MessageRole$.inboundSchema,
        content: z.string(),
    });

    export type Outbound = {
        role: string;
        content: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Message> = z.object({
        role: MessageRole$.outboundSchema,
        content: z.string(),
    });
}
