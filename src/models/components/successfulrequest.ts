/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type SuccessfulRequest = {
    success?: boolean | undefined;
};

/** @internal */
export const SuccessfulRequest$inboundSchema: z.ZodType<SuccessfulRequest, z.ZodTypeDef, unknown> =
    z.object({
        success: z.boolean().default(true),
    });

/** @internal */
export type SuccessfulRequest$Outbound = {
    success: boolean;
};

/** @internal */
export const SuccessfulRequest$outboundSchema: z.ZodType<
    SuccessfulRequest$Outbound,
    z.ZodTypeDef,
    SuccessfulRequest
> = z.object({
    success: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuccessfulRequest$ {
    /** @deprecated use `SuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = SuccessfulRequest$inboundSchema;
    /** @deprecated use `SuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = SuccessfulRequest$outboundSchema;
    /** @deprecated use `SuccessfulRequest$Outbound` instead. */
    export type Outbound = SuccessfulRequest$Outbound;
}
