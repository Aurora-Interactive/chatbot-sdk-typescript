/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UserInfo = {
    username: string;
    email: string;
};

/** @internal */
export const UserInfo$inboundSchema: z.ZodType<UserInfo, z.ZodTypeDef, unknown> = z.object({
    username: z.string(),
    email: z.string(),
});

/** @internal */
export type UserInfo$Outbound = {
    username: string;
    email: string;
};

/** @internal */
export const UserInfo$outboundSchema: z.ZodType<UserInfo$Outbound, z.ZodTypeDef, UserInfo> =
    z.object({
        username: z.string(),
        email: z.string(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserInfo$ {
    /** @deprecated use `UserInfo$inboundSchema` instead. */
    export const inboundSchema = UserInfo$inboundSchema;
    /** @deprecated use `UserInfo$outboundSchema` instead. */
    export const outboundSchema = UserInfo$outboundSchema;
    /** @deprecated use `UserInfo$Outbound` instead. */
    export type Outbound = UserInfo$Outbound;
}
