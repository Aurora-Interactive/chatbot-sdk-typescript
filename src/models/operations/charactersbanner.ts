/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type CharactersBannerGlobals = {
    accessToken?: string | undefined;
};

export type CharactersBannerRequest = {
    characterId: number;
};

/**
 * Banner image assigned to the character
 */
export type CharactersBannerSuccessfulRequest = {
    /**
     * base64-encoded AVIF image data
     */
    bannerImage: string;
    success?: boolean | undefined;
};

export type CharactersBannerResponse =
    | CharactersBannerSuccessfulRequest
    | components.BadRequestError
    | components.AuthenticationFailedError;

/** @internal */
export const CharactersBannerGlobals$inboundSchema: z.ZodType<
    CharactersBannerGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type CharactersBannerGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const CharactersBannerGlobals$outboundSchema: z.ZodType<
    CharactersBannerGlobals$Outbound,
    z.ZodTypeDef,
    CharactersBannerGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersBannerGlobals$ {
    /** @deprecated use `CharactersBannerGlobals$inboundSchema` instead. */
    export const inboundSchema = CharactersBannerGlobals$inboundSchema;
    /** @deprecated use `CharactersBannerGlobals$outboundSchema` instead. */
    export const outboundSchema = CharactersBannerGlobals$outboundSchema;
    /** @deprecated use `CharactersBannerGlobals$Outbound` instead. */
    export type Outbound = CharactersBannerGlobals$Outbound;
}

/** @internal */
export const CharactersBannerRequest$inboundSchema: z.ZodType<
    CharactersBannerRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    characterId: z.number().int(),
});

/** @internal */
export type CharactersBannerRequest$Outbound = {
    characterId: number;
};

/** @internal */
export const CharactersBannerRequest$outboundSchema: z.ZodType<
    CharactersBannerRequest$Outbound,
    z.ZodTypeDef,
    CharactersBannerRequest
> = z.object({
    characterId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersBannerRequest$ {
    /** @deprecated use `CharactersBannerRequest$inboundSchema` instead. */
    export const inboundSchema = CharactersBannerRequest$inboundSchema;
    /** @deprecated use `CharactersBannerRequest$outboundSchema` instead. */
    export const outboundSchema = CharactersBannerRequest$outboundSchema;
    /** @deprecated use `CharactersBannerRequest$Outbound` instead. */
    export type Outbound = CharactersBannerRequest$Outbound;
}

/** @internal */
export const CharactersBannerSuccessfulRequest$inboundSchema: z.ZodType<
    CharactersBannerSuccessfulRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    bannerImage: z.string(),
    success: z.boolean().default(true),
});

/** @internal */
export type CharactersBannerSuccessfulRequest$Outbound = {
    bannerImage: string;
    success: boolean;
};

/** @internal */
export const CharactersBannerSuccessfulRequest$outboundSchema: z.ZodType<
    CharactersBannerSuccessfulRequest$Outbound,
    z.ZodTypeDef,
    CharactersBannerSuccessfulRequest
> = z.object({
    bannerImage: z.string(),
    success: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersBannerSuccessfulRequest$ {
    /** @deprecated use `CharactersBannerSuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = CharactersBannerSuccessfulRequest$inboundSchema;
    /** @deprecated use `CharactersBannerSuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = CharactersBannerSuccessfulRequest$outboundSchema;
    /** @deprecated use `CharactersBannerSuccessfulRequest$Outbound` instead. */
    export type Outbound = CharactersBannerSuccessfulRequest$Outbound;
}

/** @internal */
export const CharactersBannerResponse$inboundSchema: z.ZodType<
    CharactersBannerResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => CharactersBannerSuccessfulRequest$inboundSchema),
    components.BadRequestError$inboundSchema,
    components.AuthenticationFailedError$inboundSchema,
]);

/** @internal */
export type CharactersBannerResponse$Outbound =
    | CharactersBannerSuccessfulRequest$Outbound
    | components.BadRequestError$Outbound
    | components.AuthenticationFailedError$Outbound;

/** @internal */
export const CharactersBannerResponse$outboundSchema: z.ZodType<
    CharactersBannerResponse$Outbound,
    z.ZodTypeDef,
    CharactersBannerResponse
> = z.union([
    z.lazy(() => CharactersBannerSuccessfulRequest$outboundSchema),
    components.BadRequestError$outboundSchema,
    components.AuthenticationFailedError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersBannerResponse$ {
    /** @deprecated use `CharactersBannerResponse$inboundSchema` instead. */
    export const inboundSchema = CharactersBannerResponse$inboundSchema;
    /** @deprecated use `CharactersBannerResponse$outboundSchema` instead. */
    export const outboundSchema = CharactersBannerResponse$outboundSchema;
    /** @deprecated use `CharactersBannerResponse$Outbound` instead. */
    export type Outbound = CharactersBannerResponse$Outbound;
}
