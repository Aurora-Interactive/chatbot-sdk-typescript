/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type CharactersListGlobals = {
    accessToken?: string | undefined;
};

export type CharactersListRequest = {
    numCharacters: number;
    /**
     * Character ID to start results from (useful in pagination)
     */
    from?: number | undefined;
};

export type Characters = {
    name: string;
    description: string;
    isOfficial: boolean;
    id: number;
};

/**
 * A JSON array of character metadata for each character
 */
export type CharactersListSuccessfulRequest = {
    success?: boolean | undefined;
    characters: Array<Characters>;
    isEndOfList: boolean;
};

export type CharactersListResponse =
    | components.BadRequestError
    | components.AuthenticationFailedError
    | CharactersListSuccessfulRequest;

/** @internal */
export const CharactersListGlobals$inboundSchema: z.ZodType<
    CharactersListGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type CharactersListGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const CharactersListGlobals$outboundSchema: z.ZodType<
    CharactersListGlobals$Outbound,
    z.ZodTypeDef,
    CharactersListGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersListGlobals$ {
    /** @deprecated use `CharactersListGlobals$inboundSchema` instead. */
    export const inboundSchema = CharactersListGlobals$inboundSchema;
    /** @deprecated use `CharactersListGlobals$outboundSchema` instead. */
    export const outboundSchema = CharactersListGlobals$outboundSchema;
    /** @deprecated use `CharactersListGlobals$Outbound` instead. */
    export type Outbound = CharactersListGlobals$Outbound;
}

/** @internal */
export const CharactersListRequest$inboundSchema: z.ZodType<
    CharactersListRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    numCharacters: z.number().int(),
    from: z.number().int().optional(),
});

/** @internal */
export type CharactersListRequest$Outbound = {
    numCharacters: number;
    from?: number | undefined;
};

/** @internal */
export const CharactersListRequest$outboundSchema: z.ZodType<
    CharactersListRequest$Outbound,
    z.ZodTypeDef,
    CharactersListRequest
> = z.object({
    numCharacters: z.number().int(),
    from: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersListRequest$ {
    /** @deprecated use `CharactersListRequest$inboundSchema` instead. */
    export const inboundSchema = CharactersListRequest$inboundSchema;
    /** @deprecated use `CharactersListRequest$outboundSchema` instead. */
    export const outboundSchema = CharactersListRequest$outboundSchema;
    /** @deprecated use `CharactersListRequest$Outbound` instead. */
    export type Outbound = CharactersListRequest$Outbound;
}

/** @internal */
export const Characters$inboundSchema: z.ZodType<Characters, z.ZodTypeDef, unknown> = z.object({
    name: z.string(),
    description: z.string(),
    isOfficial: z.boolean(),
    id: z.number().int(),
});

/** @internal */
export type Characters$Outbound = {
    name: string;
    description: string;
    isOfficial: boolean;
    id: number;
};

/** @internal */
export const Characters$outboundSchema: z.ZodType<Characters$Outbound, z.ZodTypeDef, Characters> =
    z.object({
        name: z.string(),
        description: z.string(),
        isOfficial: z.boolean(),
        id: z.number().int(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Characters$ {
    /** @deprecated use `Characters$inboundSchema` instead. */
    export const inboundSchema = Characters$inboundSchema;
    /** @deprecated use `Characters$outboundSchema` instead. */
    export const outboundSchema = Characters$outboundSchema;
    /** @deprecated use `Characters$Outbound` instead. */
    export type Outbound = Characters$Outbound;
}

/** @internal */
export const CharactersListSuccessfulRequest$inboundSchema: z.ZodType<
    CharactersListSuccessfulRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(true),
    characters: z.array(z.lazy(() => Characters$inboundSchema)),
    isEndOfList: z.boolean(),
});

/** @internal */
export type CharactersListSuccessfulRequest$Outbound = {
    success: boolean;
    characters: Array<Characters$Outbound>;
    isEndOfList: boolean;
};

/** @internal */
export const CharactersListSuccessfulRequest$outboundSchema: z.ZodType<
    CharactersListSuccessfulRequest$Outbound,
    z.ZodTypeDef,
    CharactersListSuccessfulRequest
> = z.object({
    success: z.boolean().default(true),
    characters: z.array(z.lazy(() => Characters$outboundSchema)),
    isEndOfList: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersListSuccessfulRequest$ {
    /** @deprecated use `CharactersListSuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = CharactersListSuccessfulRequest$inboundSchema;
    /** @deprecated use `CharactersListSuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = CharactersListSuccessfulRequest$outboundSchema;
    /** @deprecated use `CharactersListSuccessfulRequest$Outbound` instead. */
    export type Outbound = CharactersListSuccessfulRequest$Outbound;
}

/** @internal */
export const CharactersListResponse$inboundSchema: z.ZodType<
    CharactersListResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    components.AuthenticationFailedError$inboundSchema,
    z.lazy(() => CharactersListSuccessfulRequest$inboundSchema),
]);

/** @internal */
export type CharactersListResponse$Outbound =
    | components.BadRequestError$Outbound
    | components.AuthenticationFailedError$Outbound
    | CharactersListSuccessfulRequest$Outbound;

/** @internal */
export const CharactersListResponse$outboundSchema: z.ZodType<
    CharactersListResponse$Outbound,
    z.ZodTypeDef,
    CharactersListResponse
> = z.union([
    components.BadRequestError$outboundSchema,
    components.AuthenticationFailedError$outboundSchema,
    z.lazy(() => CharactersListSuccessfulRequest$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CharactersListResponse$ {
    /** @deprecated use `CharactersListResponse$inboundSchema` instead. */
    export const inboundSchema = CharactersListResponse$inboundSchema;
    /** @deprecated use `CharactersListResponse$outboundSchema` instead. */
    export const outboundSchema = CharactersListResponse$outboundSchema;
    /** @deprecated use `CharactersListResponse$Outbound` instead. */
    export type Outbound = CharactersListResponse$Outbound;
}
