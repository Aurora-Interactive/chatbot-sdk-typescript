/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateCharacterGlobals = {
    accessToken?: string | undefined;
};

export type CreateCharacterCharacterImageDataResponse = {
    aiPrompt: string;
    initialResponse: string;
    name: string;
    description: string;
    /**
     * base64-encoded AVIF image data
     */
    iconImage: string;
    /**
     * base64-encoded AVIF image data
     */
    bannerImage: string;
};

/**
 * Character was created successfully
 */
export type CreateCharacterCharacterIdResponse = {
    success?: boolean | undefined;
    characterId: number;
};

/** @internal */
export const CreateCharacterGlobals$inboundSchema: z.ZodType<
    CreateCharacterGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type CreateCharacterGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const CreateCharacterGlobals$outboundSchema: z.ZodType<
    CreateCharacterGlobals$Outbound,
    z.ZodTypeDef,
    CreateCharacterGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCharacterGlobals$ {
    /** @deprecated use `CreateCharacterGlobals$inboundSchema` instead. */
    export const inboundSchema = CreateCharacterGlobals$inboundSchema;
    /** @deprecated use `CreateCharacterGlobals$outboundSchema` instead. */
    export const outboundSchema = CreateCharacterGlobals$outboundSchema;
    /** @deprecated use `CreateCharacterGlobals$Outbound` instead. */
    export type Outbound = CreateCharacterGlobals$Outbound;
}

/** @internal */
export const CreateCharacterCharacterImageDataResponse$inboundSchema: z.ZodType<
    CreateCharacterCharacterImageDataResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    aiPrompt: z.string(),
    initialResponse: z.string(),
    name: z.string(),
    description: z.string(),
    iconImage: z.string(),
    bannerImage: z.string(),
});

/** @internal */
export type CreateCharacterCharacterImageDataResponse$Outbound = {
    aiPrompt: string;
    initialResponse: string;
    name: string;
    description: string;
    iconImage: string;
    bannerImage: string;
};

/** @internal */
export const CreateCharacterCharacterImageDataResponse$outboundSchema: z.ZodType<
    CreateCharacterCharacterImageDataResponse$Outbound,
    z.ZodTypeDef,
    CreateCharacterCharacterImageDataResponse
> = z.object({
    aiPrompt: z.string(),
    initialResponse: z.string(),
    name: z.string(),
    description: z.string(),
    iconImage: z.string(),
    bannerImage: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCharacterCharacterImageDataResponse$ {
    /** @deprecated use `CreateCharacterCharacterImageDataResponse$inboundSchema` instead. */
    export const inboundSchema = CreateCharacterCharacterImageDataResponse$inboundSchema;
    /** @deprecated use `CreateCharacterCharacterImageDataResponse$outboundSchema` instead. */
    export const outboundSchema = CreateCharacterCharacterImageDataResponse$outboundSchema;
    /** @deprecated use `CreateCharacterCharacterImageDataResponse$Outbound` instead. */
    export type Outbound = CreateCharacterCharacterImageDataResponse$Outbound;
}

/** @internal */
export const CreateCharacterCharacterIdResponse$inboundSchema: z.ZodType<
    CreateCharacterCharacterIdResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(true),
    characterId: z.number().int(),
});

/** @internal */
export type CreateCharacterCharacterIdResponse$Outbound = {
    success: boolean;
    characterId: number;
};

/** @internal */
export const CreateCharacterCharacterIdResponse$outboundSchema: z.ZodType<
    CreateCharacterCharacterIdResponse$Outbound,
    z.ZodTypeDef,
    CreateCharacterCharacterIdResponse
> = z.object({
    success: z.boolean().default(true),
    characterId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCharacterCharacterIdResponse$ {
    /** @deprecated use `CreateCharacterCharacterIdResponse$inboundSchema` instead. */
    export const inboundSchema = CreateCharacterCharacterIdResponse$inboundSchema;
    /** @deprecated use `CreateCharacterCharacterIdResponse$outboundSchema` instead. */
    export const outboundSchema = CreateCharacterCharacterIdResponse$outboundSchema;
    /** @deprecated use `CreateCharacterCharacterIdResponse$Outbound` instead. */
    export type Outbound = CreateCharacterCharacterIdResponse$Outbound;
}
