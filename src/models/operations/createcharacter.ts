/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CreateCharacterGlobals = {
    accessToken?: string | undefined;
};

export type CreateCharacterCharacterImageDataResponse = {
    aiPrompt: string;
    initialResponse: string;
    name: string;
    description: string;
    /**
     * base64-encoded AVIF image data
     */
    iconImage: string;
    /**
     * base64-encoded AVIF image data
     */
    bannerImage: string;
};

/**
 * Character was created successfully
 */
export type CreateCharacterCharacterIdResponse = {
    success?: boolean | undefined;
    characterId: number;
};

/** @internal */
export namespace CreateCharacterGlobals$ {
    export const inboundSchema: z.ZodType<CreateCharacterGlobals, z.ZodTypeDef, unknown> = z.object(
        {
            accessToken: z.string().optional(),
        }
    );

    export type Outbound = {
        accessToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateCharacterGlobals> =
        z.object({
            accessToken: z.string().optional(),
        });
}

/** @internal */
export namespace CreateCharacterCharacterImageDataResponse$ {
    export const inboundSchema: z.ZodType<
        CreateCharacterCharacterImageDataResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({
        aiPrompt: z.string(),
        initialResponse: z.string(),
        name: z.string(),
        description: z.string(),
        iconImage: z.string(),
        bannerImage: z.string(),
    });

    export type Outbound = {
        aiPrompt: string;
        initialResponse: string;
        name: string;
        description: string;
        iconImage: string;
        bannerImage: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateCharacterCharacterImageDataResponse
    > = z.object({
        aiPrompt: z.string(),
        initialResponse: z.string(),
        name: z.string(),
        description: z.string(),
        iconImage: z.string(),
        bannerImage: z.string(),
    });
}

/** @internal */
export namespace CreateCharacterCharacterIdResponse$ {
    export const inboundSchema: z.ZodType<
        CreateCharacterCharacterIdResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({
        success: z.boolean().default(true),
        characterId: z.number().int(),
    });

    export type Outbound = {
        success: boolean;
        characterId: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateCharacterCharacterIdResponse
    > = z.object({
        success: z.boolean().default(true),
        characterId: z.number().int(),
    });
}
