/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type DeleteChatGlobals = {
    accessToken?: string | undefined;
};

export type DeleteChatRequest = {
    chatId: number;
};

/**
 * Unauthorized
 */
export type DeleteChatChatsResponseBody =
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

export const ResponseBodyError = {
    InvalidChatID: "Invalid chat ID",
} as const;
export type ResponseBodyError = ClosedEnum<typeof ResponseBodyError>;

export type InvalidChatIdError = {
    success?: boolean | undefined;
    error: ResponseBodyError;
};

/**
 * Bad request
 */
export type DeleteChatResponseBody = components.BadRequestError | InvalidChatIdError;

export type DeleteChatResponse =
    | components.SuccessfulRequest
    | components.BadRequestError
    | InvalidChatIdError
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

/** @internal */
export const DeleteChatGlobals$inboundSchema: z.ZodType<DeleteChatGlobals, z.ZodTypeDef, unknown> =
    z.object({
        accessToken: z.string().optional(),
    });

/** @internal */
export type DeleteChatGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const DeleteChatGlobals$outboundSchema: z.ZodType<
    DeleteChatGlobals$Outbound,
    z.ZodTypeDef,
    DeleteChatGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteChatGlobals$ {
    /** @deprecated use `DeleteChatGlobals$inboundSchema` instead. */
    export const inboundSchema = DeleteChatGlobals$inboundSchema;
    /** @deprecated use `DeleteChatGlobals$outboundSchema` instead. */
    export const outboundSchema = DeleteChatGlobals$outboundSchema;
    /** @deprecated use `DeleteChatGlobals$Outbound` instead. */
    export type Outbound = DeleteChatGlobals$Outbound;
}

/** @internal */
export const DeleteChatRequest$inboundSchema: z.ZodType<DeleteChatRequest, z.ZodTypeDef, unknown> =
    z.object({
        chatId: z.number().int(),
    });

/** @internal */
export type DeleteChatRequest$Outbound = {
    chatId: number;
};

/** @internal */
export const DeleteChatRequest$outboundSchema: z.ZodType<
    DeleteChatRequest$Outbound,
    z.ZodTypeDef,
    DeleteChatRequest
> = z.object({
    chatId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteChatRequest$ {
    /** @deprecated use `DeleteChatRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteChatRequest$inboundSchema;
    /** @deprecated use `DeleteChatRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteChatRequest$outboundSchema;
    /** @deprecated use `DeleteChatRequest$Outbound` instead. */
    export type Outbound = DeleteChatRequest$Outbound;
}

/** @internal */
export const DeleteChatChatsResponseBody$inboundSchema: z.ZodType<
    DeleteChatChatsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.AuthenticationFailedError$inboundSchema,
    components.UnauthorizedIdError$inboundSchema,
]);

/** @internal */
export type DeleteChatChatsResponseBody$Outbound =
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const DeleteChatChatsResponseBody$outboundSchema: z.ZodType<
    DeleteChatChatsResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteChatChatsResponseBody
> = z.union([
    components.AuthenticationFailedError$outboundSchema,
    components.UnauthorizedIdError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteChatChatsResponseBody$ {
    /** @deprecated use `DeleteChatChatsResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteChatChatsResponseBody$inboundSchema;
    /** @deprecated use `DeleteChatChatsResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteChatChatsResponseBody$outboundSchema;
    /** @deprecated use `DeleteChatChatsResponseBody$Outbound` instead. */
    export type Outbound = DeleteChatChatsResponseBody$Outbound;
}

/** @internal */
export const ResponseBodyError$inboundSchema: z.ZodNativeEnum<typeof ResponseBodyError> =
    z.nativeEnum(ResponseBodyError);

/** @internal */
export const ResponseBodyError$outboundSchema: z.ZodNativeEnum<typeof ResponseBodyError> =
    ResponseBodyError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyError$ {
    /** @deprecated use `ResponseBodyError$inboundSchema` instead. */
    export const inboundSchema = ResponseBodyError$inboundSchema;
    /** @deprecated use `ResponseBodyError$outboundSchema` instead. */
    export const outboundSchema = ResponseBodyError$outboundSchema;
}

/** @internal */
export const InvalidChatIdError$inboundSchema: z.ZodType<
    InvalidChatIdError,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(false),
    error: ResponseBodyError$inboundSchema,
});

/** @internal */
export type InvalidChatIdError$Outbound = {
    success: boolean;
    error: string;
};

/** @internal */
export const InvalidChatIdError$outboundSchema: z.ZodType<
    InvalidChatIdError$Outbound,
    z.ZodTypeDef,
    InvalidChatIdError
> = z.object({
    success: z.boolean().default(false),
    error: ResponseBodyError$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvalidChatIdError$ {
    /** @deprecated use `InvalidChatIdError$inboundSchema` instead. */
    export const inboundSchema = InvalidChatIdError$inboundSchema;
    /** @deprecated use `InvalidChatIdError$outboundSchema` instead. */
    export const outboundSchema = InvalidChatIdError$outboundSchema;
    /** @deprecated use `InvalidChatIdError$Outbound` instead. */
    export type Outbound = InvalidChatIdError$Outbound;
}

/** @internal */
export const DeleteChatResponseBody$inboundSchema: z.ZodType<
    DeleteChatResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    z.lazy(() => InvalidChatIdError$inboundSchema),
]);

/** @internal */
export type DeleteChatResponseBody$Outbound =
    | components.BadRequestError$Outbound
    | InvalidChatIdError$Outbound;

/** @internal */
export const DeleteChatResponseBody$outboundSchema: z.ZodType<
    DeleteChatResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteChatResponseBody
> = z.union([
    components.BadRequestError$outboundSchema,
    z.lazy(() => InvalidChatIdError$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteChatResponseBody$ {
    /** @deprecated use `DeleteChatResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteChatResponseBody$inboundSchema;
    /** @deprecated use `DeleteChatResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteChatResponseBody$outboundSchema;
    /** @deprecated use `DeleteChatResponseBody$Outbound` instead. */
    export type Outbound = DeleteChatResponseBody$Outbound;
}

/** @internal */
export const DeleteChatResponse$inboundSchema: z.ZodType<
    DeleteChatResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.SuccessfulRequest$inboundSchema,
    z.union([
        components.BadRequestError$inboundSchema,
        z.lazy(() => InvalidChatIdError$inboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$inboundSchema,
        components.UnauthorizedIdError$inboundSchema,
    ]),
]);

/** @internal */
export type DeleteChatResponse$Outbound =
    | components.SuccessfulRequest$Outbound
    | components.BadRequestError$Outbound
    | InvalidChatIdError$Outbound
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const DeleteChatResponse$outboundSchema: z.ZodType<
    DeleteChatResponse$Outbound,
    z.ZodTypeDef,
    DeleteChatResponse
> = z.union([
    components.SuccessfulRequest$outboundSchema,
    z.union([
        components.BadRequestError$outboundSchema,
        z.lazy(() => InvalidChatIdError$outboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$outboundSchema,
        components.UnauthorizedIdError$outboundSchema,
    ]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteChatResponse$ {
    /** @deprecated use `DeleteChatResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteChatResponse$inboundSchema;
    /** @deprecated use `DeleteChatResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteChatResponse$outboundSchema;
    /** @deprecated use `DeleteChatResponse$Outbound` instead. */
    export type Outbound = DeleteChatResponse$Outbound;
}
