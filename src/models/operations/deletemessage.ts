/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type DeleteMessageGlobals = {
    accessToken?: string | undefined;
};

export type DeleteMessageRequest = {
    messageId: number;
};

/**
 * Unauthorized
 */
export type DeleteMessageMessagesResponseBody =
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

export const DeleteMessageResponseBodyError = {
    InvalidMessageID: "Invalid message ID",
} as const;
export type DeleteMessageResponseBodyError = ClosedEnum<typeof DeleteMessageResponseBodyError>;

export type InvalidMessageIdError = {
    success?: boolean | undefined;
    error: DeleteMessageResponseBodyError;
};

/**
 * Bad request
 */
export type DeleteMessageResponseBody = components.BadRequestError | InvalidMessageIdError;

export type DeleteMessageResponse =
    | components.SuccessfulRequest
    | components.AccountInBadStandingError
    | components.BadRequestError
    | InvalidMessageIdError
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

/** @internal */
export const DeleteMessageGlobals$inboundSchema: z.ZodType<
    DeleteMessageGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type DeleteMessageGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const DeleteMessageGlobals$outboundSchema: z.ZodType<
    DeleteMessageGlobals$Outbound,
    z.ZodTypeDef,
    DeleteMessageGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageGlobals$ {
    /** @deprecated use `DeleteMessageGlobals$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageGlobals$inboundSchema;
    /** @deprecated use `DeleteMessageGlobals$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageGlobals$outboundSchema;
    /** @deprecated use `DeleteMessageGlobals$Outbound` instead. */
    export type Outbound = DeleteMessageGlobals$Outbound;
}

/** @internal */
export const DeleteMessageRequest$inboundSchema: z.ZodType<
    DeleteMessageRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    messageId: z.number().int(),
});

/** @internal */
export type DeleteMessageRequest$Outbound = {
    messageId: number;
};

/** @internal */
export const DeleteMessageRequest$outboundSchema: z.ZodType<
    DeleteMessageRequest$Outbound,
    z.ZodTypeDef,
    DeleteMessageRequest
> = z.object({
    messageId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageRequest$ {
    /** @deprecated use `DeleteMessageRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageRequest$inboundSchema;
    /** @deprecated use `DeleteMessageRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageRequest$outboundSchema;
    /** @deprecated use `DeleteMessageRequest$Outbound` instead. */
    export type Outbound = DeleteMessageRequest$Outbound;
}

/** @internal */
export const DeleteMessageMessagesResponseBody$inboundSchema: z.ZodType<
    DeleteMessageMessagesResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.AuthenticationFailedError$inboundSchema,
    components.UnauthorizedIdError$inboundSchema,
]);

/** @internal */
export type DeleteMessageMessagesResponseBody$Outbound =
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const DeleteMessageMessagesResponseBody$outboundSchema: z.ZodType<
    DeleteMessageMessagesResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteMessageMessagesResponseBody
> = z.union([
    components.AuthenticationFailedError$outboundSchema,
    components.UnauthorizedIdError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageMessagesResponseBody$ {
    /** @deprecated use `DeleteMessageMessagesResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageMessagesResponseBody$inboundSchema;
    /** @deprecated use `DeleteMessageMessagesResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageMessagesResponseBody$outboundSchema;
    /** @deprecated use `DeleteMessageMessagesResponseBody$Outbound` instead. */
    export type Outbound = DeleteMessageMessagesResponseBody$Outbound;
}

/** @internal */
export const DeleteMessageResponseBodyError$inboundSchema: z.ZodNativeEnum<
    typeof DeleteMessageResponseBodyError
> = z.nativeEnum(DeleteMessageResponseBodyError);

/** @internal */
export const DeleteMessageResponseBodyError$outboundSchema: z.ZodNativeEnum<
    typeof DeleteMessageResponseBodyError
> = DeleteMessageResponseBodyError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageResponseBodyError$ {
    /** @deprecated use `DeleteMessageResponseBodyError$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageResponseBodyError$inboundSchema;
    /** @deprecated use `DeleteMessageResponseBodyError$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageResponseBodyError$outboundSchema;
}

/** @internal */
export const InvalidMessageIdError$inboundSchema: z.ZodType<
    InvalidMessageIdError,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(false),
    error: DeleteMessageResponseBodyError$inboundSchema,
});

/** @internal */
export type InvalidMessageIdError$Outbound = {
    success: boolean;
    error: string;
};

/** @internal */
export const InvalidMessageIdError$outboundSchema: z.ZodType<
    InvalidMessageIdError$Outbound,
    z.ZodTypeDef,
    InvalidMessageIdError
> = z.object({
    success: z.boolean().default(false),
    error: DeleteMessageResponseBodyError$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvalidMessageIdError$ {
    /** @deprecated use `InvalidMessageIdError$inboundSchema` instead. */
    export const inboundSchema = InvalidMessageIdError$inboundSchema;
    /** @deprecated use `InvalidMessageIdError$outboundSchema` instead. */
    export const outboundSchema = InvalidMessageIdError$outboundSchema;
    /** @deprecated use `InvalidMessageIdError$Outbound` instead. */
    export type Outbound = InvalidMessageIdError$Outbound;
}

/** @internal */
export const DeleteMessageResponseBody$inboundSchema: z.ZodType<
    DeleteMessageResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    z.lazy(() => InvalidMessageIdError$inboundSchema),
]);

/** @internal */
export type DeleteMessageResponseBody$Outbound =
    | components.BadRequestError$Outbound
    | InvalidMessageIdError$Outbound;

/** @internal */
export const DeleteMessageResponseBody$outboundSchema: z.ZodType<
    DeleteMessageResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteMessageResponseBody
> = z.union([
    components.BadRequestError$outboundSchema,
    z.lazy(() => InvalidMessageIdError$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageResponseBody$ {
    /** @deprecated use `DeleteMessageResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageResponseBody$inboundSchema;
    /** @deprecated use `DeleteMessageResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageResponseBody$outboundSchema;
    /** @deprecated use `DeleteMessageResponseBody$Outbound` instead. */
    export type Outbound = DeleteMessageResponseBody$Outbound;
}

/** @internal */
export const DeleteMessageResponse$inboundSchema: z.ZodType<
    DeleteMessageResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.SuccessfulRequest$inboundSchema,
    components.AccountInBadStandingError$inboundSchema,
    z.union([
        components.BadRequestError$inboundSchema,
        z.lazy(() => InvalidMessageIdError$inboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$inboundSchema,
        components.UnauthorizedIdError$inboundSchema,
    ]),
]);

/** @internal */
export type DeleteMessageResponse$Outbound =
    | components.SuccessfulRequest$Outbound
    | components.AccountInBadStandingError$Outbound
    | components.BadRequestError$Outbound
    | InvalidMessageIdError$Outbound
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const DeleteMessageResponse$outboundSchema: z.ZodType<
    DeleteMessageResponse$Outbound,
    z.ZodTypeDef,
    DeleteMessageResponse
> = z.union([
    components.SuccessfulRequest$outboundSchema,
    components.AccountInBadStandingError$outboundSchema,
    z.union([
        components.BadRequestError$outboundSchema,
        z.lazy(() => InvalidMessageIdError$outboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$outboundSchema,
        components.UnauthorizedIdError$outboundSchema,
    ]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageResponse$ {
    /** @deprecated use `DeleteMessageResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageResponse$inboundSchema;
    /** @deprecated use `DeleteMessageResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageResponse$outboundSchema;
    /** @deprecated use `DeleteMessageResponse$Outbound` instead. */
    export type Outbound = DeleteMessageResponse$Outbound;
}
