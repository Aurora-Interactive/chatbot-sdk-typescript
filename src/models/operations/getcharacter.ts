/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetCharacterGlobals = {
    accessToken?: string | undefined;
};

export type GetCharacterRequest = {
    characterId: number;
};

/**
 * Character data
 */
export type GetCharacterResponseBody = {
    /**
     * base64-encoded AVIF image data
     */
    iconImage: string;
    name: string;
    description: string;
    isOfficial: boolean;
};

/** @internal */
export const GetCharacterGlobals$inboundSchema: z.ZodType<
    GetCharacterGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type GetCharacterGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const GetCharacterGlobals$outboundSchema: z.ZodType<
    GetCharacterGlobals$Outbound,
    z.ZodTypeDef,
    GetCharacterGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterGlobals$ {
    /** @deprecated use `GetCharacterGlobals$inboundSchema` instead. */
    export const inboundSchema = GetCharacterGlobals$inboundSchema;
    /** @deprecated use `GetCharacterGlobals$outboundSchema` instead. */
    export const outboundSchema = GetCharacterGlobals$outboundSchema;
    /** @deprecated use `GetCharacterGlobals$Outbound` instead. */
    export type Outbound = GetCharacterGlobals$Outbound;
}

/** @internal */
export const GetCharacterRequest$inboundSchema: z.ZodType<
    GetCharacterRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    characterId: z.number().int(),
});

/** @internal */
export type GetCharacterRequest$Outbound = {
    characterId: number;
};

/** @internal */
export const GetCharacterRequest$outboundSchema: z.ZodType<
    GetCharacterRequest$Outbound,
    z.ZodTypeDef,
    GetCharacterRequest
> = z.object({
    characterId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterRequest$ {
    /** @deprecated use `GetCharacterRequest$inboundSchema` instead. */
    export const inboundSchema = GetCharacterRequest$inboundSchema;
    /** @deprecated use `GetCharacterRequest$outboundSchema` instead. */
    export const outboundSchema = GetCharacterRequest$outboundSchema;
    /** @deprecated use `GetCharacterRequest$Outbound` instead. */
    export type Outbound = GetCharacterRequest$Outbound;
}

/** @internal */
export const GetCharacterResponseBody$inboundSchema: z.ZodType<
    GetCharacterResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    iconImage: z.string(),
    name: z.string(),
    description: z.string(),
    isOfficial: z.boolean(),
});

/** @internal */
export type GetCharacterResponseBody$Outbound = {
    iconImage: string;
    name: string;
    description: string;
    isOfficial: boolean;
};

/** @internal */
export const GetCharacterResponseBody$outboundSchema: z.ZodType<
    GetCharacterResponseBody$Outbound,
    z.ZodTypeDef,
    GetCharacterResponseBody
> = z.object({
    iconImage: z.string(),
    name: z.string(),
    description: z.string(),
    isOfficial: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterResponseBody$ {
    /** @deprecated use `GetCharacterResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetCharacterResponseBody$inboundSchema;
    /** @deprecated use `GetCharacterResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetCharacterResponseBody$outboundSchema;
    /** @deprecated use `GetCharacterResponseBody$Outbound` instead. */
    export type Outbound = GetCharacterResponseBody$Outbound;
}
