/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type GetCharacterAiInitializationDataGlobals = {
    accessToken?: string | undefined;
};

export type GetCharacterAiInitializationDataRequest = {
    characterId: number;
};

/**
 * Character AI initialization data
 */
export type GetCharacterAiInitializationDataSuccessfulRequest = {
    aiPrompt: string;
    initialResponse: string;
    success?: boolean | undefined;
};

export type GetCharacterAiInitializationDataResponse =
    | components.BadRequestError
    | components.AuthenticationFailedError
    | components.AccountInBadStandingError
    | GetCharacterAiInitializationDataSuccessfulRequest;

/** @internal */
export const GetCharacterAiInitializationDataGlobals$inboundSchema: z.ZodType<
    GetCharacterAiInitializationDataGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type GetCharacterAiInitializationDataGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const GetCharacterAiInitializationDataGlobals$outboundSchema: z.ZodType<
    GetCharacterAiInitializationDataGlobals$Outbound,
    z.ZodTypeDef,
    GetCharacterAiInitializationDataGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterAiInitializationDataGlobals$ {
    /** @deprecated use `GetCharacterAiInitializationDataGlobals$inboundSchema` instead. */
    export const inboundSchema = GetCharacterAiInitializationDataGlobals$inboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataGlobals$outboundSchema` instead. */
    export const outboundSchema = GetCharacterAiInitializationDataGlobals$outboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataGlobals$Outbound` instead. */
    export type Outbound = GetCharacterAiInitializationDataGlobals$Outbound;
}

/** @internal */
export const GetCharacterAiInitializationDataRequest$inboundSchema: z.ZodType<
    GetCharacterAiInitializationDataRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    characterId: z.number().int(),
});

/** @internal */
export type GetCharacterAiInitializationDataRequest$Outbound = {
    characterId: number;
};

/** @internal */
export const GetCharacterAiInitializationDataRequest$outboundSchema: z.ZodType<
    GetCharacterAiInitializationDataRequest$Outbound,
    z.ZodTypeDef,
    GetCharacterAiInitializationDataRequest
> = z.object({
    characterId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterAiInitializationDataRequest$ {
    /** @deprecated use `GetCharacterAiInitializationDataRequest$inboundSchema` instead. */
    export const inboundSchema = GetCharacterAiInitializationDataRequest$inboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataRequest$outboundSchema` instead. */
    export const outboundSchema = GetCharacterAiInitializationDataRequest$outboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataRequest$Outbound` instead. */
    export type Outbound = GetCharacterAiInitializationDataRequest$Outbound;
}

/** @internal */
export const GetCharacterAiInitializationDataSuccessfulRequest$inboundSchema: z.ZodType<
    GetCharacterAiInitializationDataSuccessfulRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    aiPrompt: z.string(),
    initialResponse: z.string(),
    success: z.boolean().default(true),
});

/** @internal */
export type GetCharacterAiInitializationDataSuccessfulRequest$Outbound = {
    aiPrompt: string;
    initialResponse: string;
    success: boolean;
};

/** @internal */
export const GetCharacterAiInitializationDataSuccessfulRequest$outboundSchema: z.ZodType<
    GetCharacterAiInitializationDataSuccessfulRequest$Outbound,
    z.ZodTypeDef,
    GetCharacterAiInitializationDataSuccessfulRequest
> = z.object({
    aiPrompt: z.string(),
    initialResponse: z.string(),
    success: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterAiInitializationDataSuccessfulRequest$ {
    /** @deprecated use `GetCharacterAiInitializationDataSuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = GetCharacterAiInitializationDataSuccessfulRequest$inboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataSuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = GetCharacterAiInitializationDataSuccessfulRequest$outboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataSuccessfulRequest$Outbound` instead. */
    export type Outbound = GetCharacterAiInitializationDataSuccessfulRequest$Outbound;
}

/** @internal */
export const GetCharacterAiInitializationDataResponse$inboundSchema: z.ZodType<
    GetCharacterAiInitializationDataResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    components.AuthenticationFailedError$inboundSchema,
    components.AccountInBadStandingError$inboundSchema,
    z.lazy(() => GetCharacterAiInitializationDataSuccessfulRequest$inboundSchema),
]);

/** @internal */
export type GetCharacterAiInitializationDataResponse$Outbound =
    | components.BadRequestError$Outbound
    | components.AuthenticationFailedError$Outbound
    | components.AccountInBadStandingError$Outbound
    | GetCharacterAiInitializationDataSuccessfulRequest$Outbound;

/** @internal */
export const GetCharacterAiInitializationDataResponse$outboundSchema: z.ZodType<
    GetCharacterAiInitializationDataResponse$Outbound,
    z.ZodTypeDef,
    GetCharacterAiInitializationDataResponse
> = z.union([
    components.BadRequestError$outboundSchema,
    components.AuthenticationFailedError$outboundSchema,
    components.AccountInBadStandingError$outboundSchema,
    z.lazy(() => GetCharacterAiInitializationDataSuccessfulRequest$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterAiInitializationDataResponse$ {
    /** @deprecated use `GetCharacterAiInitializationDataResponse$inboundSchema` instead. */
    export const inboundSchema = GetCharacterAiInitializationDataResponse$inboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataResponse$outboundSchema` instead. */
    export const outboundSchema = GetCharacterAiInitializationDataResponse$outboundSchema;
    /** @deprecated use `GetCharacterAiInitializationDataResponse$Outbound` instead. */
    export type Outbound = GetCharacterAiInitializationDataResponse$Outbound;
}
