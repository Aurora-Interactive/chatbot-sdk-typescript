/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type GetCharacterBannerGlobals = {
    accessToken?: string | undefined;
};

export type GetCharacterBannerRequest = {
    characterId: number;
};

/**
 * Banner and icon images assigned to the character
 */
export type GetCharacterBannerSuccessfulRequest = {
    /**
     * base64-encoded AVIF image data
     */
    bannerImage: string;
    success?: boolean | undefined;
};

export type GetCharacterBannerResponse =
    | GetCharacterBannerSuccessfulRequest
    | components.BadRequestError
    | components.AuthenticationFailedError;

/** @internal */
export const GetCharacterBannerGlobals$inboundSchema: z.ZodType<
    GetCharacterBannerGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type GetCharacterBannerGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const GetCharacterBannerGlobals$outboundSchema: z.ZodType<
    GetCharacterBannerGlobals$Outbound,
    z.ZodTypeDef,
    GetCharacterBannerGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterBannerGlobals$ {
    /** @deprecated use `GetCharacterBannerGlobals$inboundSchema` instead. */
    export const inboundSchema = GetCharacterBannerGlobals$inboundSchema;
    /** @deprecated use `GetCharacterBannerGlobals$outboundSchema` instead. */
    export const outboundSchema = GetCharacterBannerGlobals$outboundSchema;
    /** @deprecated use `GetCharacterBannerGlobals$Outbound` instead. */
    export type Outbound = GetCharacterBannerGlobals$Outbound;
}

/** @internal */
export const GetCharacterBannerRequest$inboundSchema: z.ZodType<
    GetCharacterBannerRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    characterId: z.number().int(),
});

/** @internal */
export type GetCharacterBannerRequest$Outbound = {
    characterId: number;
};

/** @internal */
export const GetCharacterBannerRequest$outboundSchema: z.ZodType<
    GetCharacterBannerRequest$Outbound,
    z.ZodTypeDef,
    GetCharacterBannerRequest
> = z.object({
    characterId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterBannerRequest$ {
    /** @deprecated use `GetCharacterBannerRequest$inboundSchema` instead. */
    export const inboundSchema = GetCharacterBannerRequest$inboundSchema;
    /** @deprecated use `GetCharacterBannerRequest$outboundSchema` instead. */
    export const outboundSchema = GetCharacterBannerRequest$outboundSchema;
    /** @deprecated use `GetCharacterBannerRequest$Outbound` instead. */
    export type Outbound = GetCharacterBannerRequest$Outbound;
}

/** @internal */
export const GetCharacterBannerSuccessfulRequest$inboundSchema: z.ZodType<
    GetCharacterBannerSuccessfulRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    bannerImage: z.string(),
    success: z.boolean().default(true),
});

/** @internal */
export type GetCharacterBannerSuccessfulRequest$Outbound = {
    bannerImage: string;
    success: boolean;
};

/** @internal */
export const GetCharacterBannerSuccessfulRequest$outboundSchema: z.ZodType<
    GetCharacterBannerSuccessfulRequest$Outbound,
    z.ZodTypeDef,
    GetCharacterBannerSuccessfulRequest
> = z.object({
    bannerImage: z.string(),
    success: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterBannerSuccessfulRequest$ {
    /** @deprecated use `GetCharacterBannerSuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = GetCharacterBannerSuccessfulRequest$inboundSchema;
    /** @deprecated use `GetCharacterBannerSuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = GetCharacterBannerSuccessfulRequest$outboundSchema;
    /** @deprecated use `GetCharacterBannerSuccessfulRequest$Outbound` instead. */
    export type Outbound = GetCharacterBannerSuccessfulRequest$Outbound;
}

/** @internal */
export const GetCharacterBannerResponse$inboundSchema: z.ZodType<
    GetCharacterBannerResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetCharacterBannerSuccessfulRequest$inboundSchema),
    components.BadRequestError$inboundSchema,
    components.AuthenticationFailedError$inboundSchema,
]);

/** @internal */
export type GetCharacterBannerResponse$Outbound =
    | GetCharacterBannerSuccessfulRequest$Outbound
    | components.BadRequestError$Outbound
    | components.AuthenticationFailedError$Outbound;

/** @internal */
export const GetCharacterBannerResponse$outboundSchema: z.ZodType<
    GetCharacterBannerResponse$Outbound,
    z.ZodTypeDef,
    GetCharacterBannerResponse
> = z.union([
    z.lazy(() => GetCharacterBannerSuccessfulRequest$outboundSchema),
    components.BadRequestError$outboundSchema,
    components.AuthenticationFailedError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCharacterBannerResponse$ {
    /** @deprecated use `GetCharacterBannerResponse$inboundSchema` instead. */
    export const inboundSchema = GetCharacterBannerResponse$inboundSchema;
    /** @deprecated use `GetCharacterBannerResponse$outboundSchema` instead. */
    export const outboundSchema = GetCharacterBannerResponse$outboundSchema;
    /** @deprecated use `GetCharacterBannerResponse$Outbound` instead. */
    export type Outbound = GetCharacterBannerResponse$Outbound;
}
