/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetChatsForUserGlobals = {
    accessToken?: string | undefined;
};

export type GetChatsForUserRequest = {};

export type ChatIDResponse = {
    characterId: number;
    chatId: number;
};

/**
 * JSON array of chat info
 */
export type GetChatsForUserSuccessfulRequest = {
    success?: boolean | undefined;
    chats: Array<ChatIDResponse>;
};

/** @internal */
export namespace GetChatsForUserGlobals$ {
    export const inboundSchema: z.ZodType<GetChatsForUserGlobals, z.ZodTypeDef, unknown> = z.object(
        {
            accessToken: z.string().optional(),
        }
    );

    export type Outbound = {
        accessToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetChatsForUserGlobals> =
        z.object({
            accessToken: z.string().optional(),
        });
}

/** @internal */
export namespace GetChatsForUserRequest$ {
    export const inboundSchema: z.ZodType<GetChatsForUserRequest, z.ZodTypeDef, unknown> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetChatsForUserRequest> =
        z.object({});
}

/** @internal */
export namespace ChatIDResponse$ {
    export const inboundSchema: z.ZodType<ChatIDResponse, z.ZodTypeDef, unknown> = z.object({
        characterId: z.number().int(),
        chatId: z.number().int(),
    });

    export type Outbound = {
        characterId: number;
        chatId: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ChatIDResponse> = z.object({
        characterId: z.number().int(),
        chatId: z.number().int(),
    });
}

/** @internal */
export namespace GetChatsForUserSuccessfulRequest$ {
    export const inboundSchema: z.ZodType<GetChatsForUserSuccessfulRequest, z.ZodTypeDef, unknown> =
        z.object({
            success: z.boolean().default(true),
            chats: z.array(z.lazy(() => ChatIDResponse$.inboundSchema)),
        });

    export type Outbound = {
        success: boolean;
        chats: Array<ChatIDResponse$.Outbound>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetChatsForUserSuccessfulRequest
    > = z.object({
        success: z.boolean().default(true),
        chats: z.array(z.lazy(() => ChatIDResponse$.outboundSchema)),
    });
}
