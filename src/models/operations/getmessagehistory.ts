/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type GetMessageHistoryGlobals = {
    accessToken?: string | undefined;
};

export type GetMessageHistoryRequest = {
    chatId: number;
};

/**
 * JSON array of chat messages
 */
export type GetMessageHistorySuccessfulRequest = {
    success?: boolean | undefined;
    chatHistory: Array<components.TimestampedMessage>;
};

/** @internal */
export namespace GetMessageHistoryGlobals$ {
    export const inboundSchema: z.ZodType<GetMessageHistoryGlobals, z.ZodTypeDef, unknown> =
        z.object({
            accessToken: z.string().optional(),
        });

    export type Outbound = {
        accessToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMessageHistoryGlobals> =
        z.object({
            accessToken: z.string().optional(),
        });
}

/** @internal */
export namespace GetMessageHistoryRequest$ {
    export const inboundSchema: z.ZodType<GetMessageHistoryRequest, z.ZodTypeDef, unknown> =
        z.object({
            chatId: z.number().int(),
        });

    export type Outbound = {
        chatId: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetMessageHistoryRequest> =
        z.object({
            chatId: z.number().int(),
        });
}

/** @internal */
export namespace GetMessageHistorySuccessfulRequest$ {
    export const inboundSchema: z.ZodType<
        GetMessageHistorySuccessfulRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        success: z.boolean().default(true),
        chatHistory: z.array(components.TimestampedMessage$.inboundSchema),
    });

    export type Outbound = {
        success: boolean;
        chatHistory: Array<components.TimestampedMessage$.Outbound>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetMessageHistorySuccessfulRequest
    > = z.object({
        success: z.boolean().default(true),
        chatHistory: z.array(components.TimestampedMessage$.outboundSchema),
    });
}
