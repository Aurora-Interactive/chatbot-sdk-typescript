/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type GetMessageHistoryGlobals = {
    accessToken?: string | undefined;
};

export type GetMessageHistoryRequest = {
    chatId: number;
};

/**
 * Unauthorized
 */
export type GetMessageHistoryMessagesResponseBody =
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

export const GetMessageHistoryResponseBodyError = {
    InvalidChatID: "Invalid chat ID",
} as const;
export type GetMessageHistoryResponseBodyError = ClosedEnum<
    typeof GetMessageHistoryResponseBodyError
>;

export type ResponseBodyInvalidChatIdError = {
    success?: boolean | undefined;
    error: GetMessageHistoryResponseBodyError;
};

/**
 * Bad request
 */
export type GetMessageHistoryResponseBody =
    | components.BadRequestError
    | ResponseBodyInvalidChatIdError;

/**
 * JSON array of chat messages
 */
export type GetMessageHistorySuccessfulRequest = {
    success?: boolean | undefined;
    chatHistory: Array<components.TimestampedMessage>;
};

export type GetMessageHistoryResponse =
    | GetMessageHistorySuccessfulRequest
    | components.AccountInBadStandingError
    | components.BadRequestError
    | ResponseBodyInvalidChatIdError
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

/** @internal */
export const GetMessageHistoryGlobals$inboundSchema: z.ZodType<
    GetMessageHistoryGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type GetMessageHistoryGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const GetMessageHistoryGlobals$outboundSchema: z.ZodType<
    GetMessageHistoryGlobals$Outbound,
    z.ZodTypeDef,
    GetMessageHistoryGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistoryGlobals$ {
    /** @deprecated use `GetMessageHistoryGlobals$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistoryGlobals$inboundSchema;
    /** @deprecated use `GetMessageHistoryGlobals$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistoryGlobals$outboundSchema;
    /** @deprecated use `GetMessageHistoryGlobals$Outbound` instead. */
    export type Outbound = GetMessageHistoryGlobals$Outbound;
}

/** @internal */
export const GetMessageHistoryRequest$inboundSchema: z.ZodType<
    GetMessageHistoryRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    chatId: z.number().int(),
});

/** @internal */
export type GetMessageHistoryRequest$Outbound = {
    chatId: number;
};

/** @internal */
export const GetMessageHistoryRequest$outboundSchema: z.ZodType<
    GetMessageHistoryRequest$Outbound,
    z.ZodTypeDef,
    GetMessageHistoryRequest
> = z.object({
    chatId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistoryRequest$ {
    /** @deprecated use `GetMessageHistoryRequest$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistoryRequest$inboundSchema;
    /** @deprecated use `GetMessageHistoryRequest$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistoryRequest$outboundSchema;
    /** @deprecated use `GetMessageHistoryRequest$Outbound` instead. */
    export type Outbound = GetMessageHistoryRequest$Outbound;
}

/** @internal */
export const GetMessageHistoryMessagesResponseBody$inboundSchema: z.ZodType<
    GetMessageHistoryMessagesResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.AuthenticationFailedError$inboundSchema,
    components.UnauthorizedIdError$inboundSchema,
]);

/** @internal */
export type GetMessageHistoryMessagesResponseBody$Outbound =
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const GetMessageHistoryMessagesResponseBody$outboundSchema: z.ZodType<
    GetMessageHistoryMessagesResponseBody$Outbound,
    z.ZodTypeDef,
    GetMessageHistoryMessagesResponseBody
> = z.union([
    components.AuthenticationFailedError$outboundSchema,
    components.UnauthorizedIdError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistoryMessagesResponseBody$ {
    /** @deprecated use `GetMessageHistoryMessagesResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistoryMessagesResponseBody$inboundSchema;
    /** @deprecated use `GetMessageHistoryMessagesResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistoryMessagesResponseBody$outboundSchema;
    /** @deprecated use `GetMessageHistoryMessagesResponseBody$Outbound` instead. */
    export type Outbound = GetMessageHistoryMessagesResponseBody$Outbound;
}

/** @internal */
export const GetMessageHistoryResponseBodyError$inboundSchema: z.ZodNativeEnum<
    typeof GetMessageHistoryResponseBodyError
> = z.nativeEnum(GetMessageHistoryResponseBodyError);

/** @internal */
export const GetMessageHistoryResponseBodyError$outboundSchema: z.ZodNativeEnum<
    typeof GetMessageHistoryResponseBodyError
> = GetMessageHistoryResponseBodyError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistoryResponseBodyError$ {
    /** @deprecated use `GetMessageHistoryResponseBodyError$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistoryResponseBodyError$inboundSchema;
    /** @deprecated use `GetMessageHistoryResponseBodyError$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistoryResponseBodyError$outboundSchema;
}

/** @internal */
export const ResponseBodyInvalidChatIdError$inboundSchema: z.ZodType<
    ResponseBodyInvalidChatIdError,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(false),
    error: GetMessageHistoryResponseBodyError$inboundSchema,
});

/** @internal */
export type ResponseBodyInvalidChatIdError$Outbound = {
    success: boolean;
    error: string;
};

/** @internal */
export const ResponseBodyInvalidChatIdError$outboundSchema: z.ZodType<
    ResponseBodyInvalidChatIdError$Outbound,
    z.ZodTypeDef,
    ResponseBodyInvalidChatIdError
> = z.object({
    success: z.boolean().default(false),
    error: GetMessageHistoryResponseBodyError$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyInvalidChatIdError$ {
    /** @deprecated use `ResponseBodyInvalidChatIdError$inboundSchema` instead. */
    export const inboundSchema = ResponseBodyInvalidChatIdError$inboundSchema;
    /** @deprecated use `ResponseBodyInvalidChatIdError$outboundSchema` instead. */
    export const outboundSchema = ResponseBodyInvalidChatIdError$outboundSchema;
    /** @deprecated use `ResponseBodyInvalidChatIdError$Outbound` instead. */
    export type Outbound = ResponseBodyInvalidChatIdError$Outbound;
}

/** @internal */
export const GetMessageHistoryResponseBody$inboundSchema: z.ZodType<
    GetMessageHistoryResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    z.lazy(() => ResponseBodyInvalidChatIdError$inboundSchema),
]);

/** @internal */
export type GetMessageHistoryResponseBody$Outbound =
    | components.BadRequestError$Outbound
    | ResponseBodyInvalidChatIdError$Outbound;

/** @internal */
export const GetMessageHistoryResponseBody$outboundSchema: z.ZodType<
    GetMessageHistoryResponseBody$Outbound,
    z.ZodTypeDef,
    GetMessageHistoryResponseBody
> = z.union([
    components.BadRequestError$outboundSchema,
    z.lazy(() => ResponseBodyInvalidChatIdError$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistoryResponseBody$ {
    /** @deprecated use `GetMessageHistoryResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistoryResponseBody$inboundSchema;
    /** @deprecated use `GetMessageHistoryResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistoryResponseBody$outboundSchema;
    /** @deprecated use `GetMessageHistoryResponseBody$Outbound` instead. */
    export type Outbound = GetMessageHistoryResponseBody$Outbound;
}

/** @internal */
export const GetMessageHistorySuccessfulRequest$inboundSchema: z.ZodType<
    GetMessageHistorySuccessfulRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(true),
    chatHistory: z.array(components.TimestampedMessage$inboundSchema),
});

/** @internal */
export type GetMessageHistorySuccessfulRequest$Outbound = {
    success: boolean;
    chatHistory: Array<components.TimestampedMessage$Outbound>;
};

/** @internal */
export const GetMessageHistorySuccessfulRequest$outboundSchema: z.ZodType<
    GetMessageHistorySuccessfulRequest$Outbound,
    z.ZodTypeDef,
    GetMessageHistorySuccessfulRequest
> = z.object({
    success: z.boolean().default(true),
    chatHistory: z.array(components.TimestampedMessage$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistorySuccessfulRequest$ {
    /** @deprecated use `GetMessageHistorySuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistorySuccessfulRequest$inboundSchema;
    /** @deprecated use `GetMessageHistorySuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistorySuccessfulRequest$outboundSchema;
    /** @deprecated use `GetMessageHistorySuccessfulRequest$Outbound` instead. */
    export type Outbound = GetMessageHistorySuccessfulRequest$Outbound;
}

/** @internal */
export const GetMessageHistoryResponse$inboundSchema: z.ZodType<
    GetMessageHistoryResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => GetMessageHistorySuccessfulRequest$inboundSchema),
    components.AccountInBadStandingError$inboundSchema,
    z.union([
        components.BadRequestError$inboundSchema,
        z.lazy(() => ResponseBodyInvalidChatIdError$inboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$inboundSchema,
        components.UnauthorizedIdError$inboundSchema,
    ]),
]);

/** @internal */
export type GetMessageHistoryResponse$Outbound =
    | GetMessageHistorySuccessfulRequest$Outbound
    | components.AccountInBadStandingError$Outbound
    | components.BadRequestError$Outbound
    | ResponseBodyInvalidChatIdError$Outbound
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const GetMessageHistoryResponse$outboundSchema: z.ZodType<
    GetMessageHistoryResponse$Outbound,
    z.ZodTypeDef,
    GetMessageHistoryResponse
> = z.union([
    z.lazy(() => GetMessageHistorySuccessfulRequest$outboundSchema),
    components.AccountInBadStandingError$outboundSchema,
    z.union([
        components.BadRequestError$outboundSchema,
        z.lazy(() => ResponseBodyInvalidChatIdError$outboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$outboundSchema,
        components.UnauthorizedIdError$outboundSchema,
    ]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageHistoryResponse$ {
    /** @deprecated use `GetMessageHistoryResponse$inboundSchema` instead. */
    export const inboundSchema = GetMessageHistoryResponse$inboundSchema;
    /** @deprecated use `GetMessageHistoryResponse$outboundSchema` instead. */
    export const outboundSchema = GetMessageHistoryResponse$outboundSchema;
    /** @deprecated use `GetMessageHistoryResponse$Outbound` instead. */
    export type Outbound = GetMessageHistoryResponse$Outbound;
}
