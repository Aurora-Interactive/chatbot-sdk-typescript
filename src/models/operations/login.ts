/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type LoginRequestBody = {
    username: string;
    password: string;
};

export type LoginResponse =
    | components.AccessTokenObj
    | components.BadRequestError
    | components.AuthenticationFailedError;

/** @internal */
export const LoginRequestBody$inboundSchema: z.ZodType<LoginRequestBody, z.ZodTypeDef, unknown> =
    z.object({
        username: z.string(),
        password: z.string(),
    });

/** @internal */
export type LoginRequestBody$Outbound = {
    username: string;
    password: string;
};

/** @internal */
export const LoginRequestBody$outboundSchema: z.ZodType<
    LoginRequestBody$Outbound,
    z.ZodTypeDef,
    LoginRequestBody
> = z.object({
    username: z.string(),
    password: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LoginRequestBody$ {
    /** @deprecated use `LoginRequestBody$inboundSchema` instead. */
    export const inboundSchema = LoginRequestBody$inboundSchema;
    /** @deprecated use `LoginRequestBody$outboundSchema` instead. */
    export const outboundSchema = LoginRequestBody$outboundSchema;
    /** @deprecated use `LoginRequestBody$Outbound` instead. */
    export type Outbound = LoginRequestBody$Outbound;
}

/** @internal */
export const LoginResponse$inboundSchema: z.ZodType<LoginResponse, z.ZodTypeDef, unknown> = z.union(
    [
        components.AccessTokenObj$inboundSchema,
        components.BadRequestError$inboundSchema,
        components.AuthenticationFailedError$inboundSchema,
    ]
);

/** @internal */
export type LoginResponse$Outbound =
    | components.AccessTokenObj$Outbound
    | components.BadRequestError$Outbound
    | components.AuthenticationFailedError$Outbound;

/** @internal */
export const LoginResponse$outboundSchema: z.ZodType<
    LoginResponse$Outbound,
    z.ZodTypeDef,
    LoginResponse
> = z.union([
    components.AccessTokenObj$outboundSchema,
    components.BadRequestError$outboundSchema,
    components.AuthenticationFailedError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LoginResponse$ {
    /** @deprecated use `LoginResponse$inboundSchema` instead. */
    export const inboundSchema = LoginResponse$inboundSchema;
    /** @deprecated use `LoginResponse$outboundSchema` instead. */
    export const outboundSchema = LoginResponse$outboundSchema;
    /** @deprecated use `LoginResponse$Outbound` instead. */
    export type Outbound = LoginResponse$Outbound;
}
