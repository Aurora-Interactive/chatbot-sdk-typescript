/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { EventStream } from "../../lib/event-streams.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type MessagesSendGlobals = {
    accessToken?: string | undefined;
};

export type MessagesSendRequestBody = {
    characterId: number;
    chatId: number;
    message: string;
};

export type MessagesSendResponse =
    | components.BadRequestError
    | components.AuthenticationFailedError
    | components.AccountInBadStandingError
    | EventStream<components.ChatCompletionFragment>;

/** @internal */
export const MessagesSendGlobals$inboundSchema: z.ZodType<
    MessagesSendGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type MessagesSendGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const MessagesSendGlobals$outboundSchema: z.ZodType<
    MessagesSendGlobals$Outbound,
    z.ZodTypeDef,
    MessagesSendGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessagesSendGlobals$ {
    /** @deprecated use `MessagesSendGlobals$inboundSchema` instead. */
    export const inboundSchema = MessagesSendGlobals$inboundSchema;
    /** @deprecated use `MessagesSendGlobals$outboundSchema` instead. */
    export const outboundSchema = MessagesSendGlobals$outboundSchema;
    /** @deprecated use `MessagesSendGlobals$Outbound` instead. */
    export type Outbound = MessagesSendGlobals$Outbound;
}

/** @internal */
export const MessagesSendRequestBody$inboundSchema: z.ZodType<
    MessagesSendRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    characterId: z.number().int(),
    chatId: z.number().int(),
    message: z.string(),
});

/** @internal */
export type MessagesSendRequestBody$Outbound = {
    characterId: number;
    chatId: number;
    message: string;
};

/** @internal */
export const MessagesSendRequestBody$outboundSchema: z.ZodType<
    MessagesSendRequestBody$Outbound,
    z.ZodTypeDef,
    MessagesSendRequestBody
> = z.object({
    characterId: z.number().int(),
    chatId: z.number().int(),
    message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessagesSendRequestBody$ {
    /** @deprecated use `MessagesSendRequestBody$inboundSchema` instead. */
    export const inboundSchema = MessagesSendRequestBody$inboundSchema;
    /** @deprecated use `MessagesSendRequestBody$outboundSchema` instead. */
    export const outboundSchema = MessagesSendRequestBody$outboundSchema;
    /** @deprecated use `MessagesSendRequestBody$Outbound` instead. */
    export type Outbound = MessagesSendRequestBody$Outbound;
}

/** @internal */
export const MessagesSendResponse$inboundSchema: z.ZodType<
    MessagesSendResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    components.AuthenticationFailedError$inboundSchema,
    components.AccountInBadStandingError$inboundSchema,
    z.instanceof(ReadableStream<Uint8Array>).transform((stream) => {
        return new EventStream({
            stream,
            decoder(rawEvent) {
                const schema = components.ChatCompletionFragment$inboundSchema;
                return schema.parse(rawEvent);
            },
        });
    }),
]);

/** @internal */
export type MessagesSendResponse$Outbound =
    | components.BadRequestError$Outbound
    | components.AuthenticationFailedError$Outbound
    | components.AccountInBadStandingError$Outbound
    | never;

/** @internal */
export const MessagesSendResponse$outboundSchema: z.ZodType<
    MessagesSendResponse$Outbound,
    z.ZodTypeDef,
    MessagesSendResponse
> = z.union([
    components.BadRequestError$outboundSchema,
    components.AuthenticationFailedError$outboundSchema,
    components.AccountInBadStandingError$outboundSchema,
    z.never(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessagesSendResponse$ {
    /** @deprecated use `MessagesSendResponse$inboundSchema` instead. */
    export const inboundSchema = MessagesSendResponse$inboundSchema;
    /** @deprecated use `MessagesSendResponse$outboundSchema` instead. */
    export const outboundSchema = MessagesSendResponse$outboundSchema;
    /** @deprecated use `MessagesSendResponse$Outbound` instead. */
    export type Outbound = MessagesSendResponse$Outbound;
}
