/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export type SaveMessageGlobals = {
    accessToken?: string | undefined;
};

export const Role = {
    System: "system",
    User: "user",
    Assistant: "assistant",
} as const;
export type Role = ClosedEnum<typeof Role>;

export type SaveMessageTimestampedMessageResponse = {
    role: Role;
    content: string;
    timestamp: number;
    chatId: number;
};

/** @internal */
export namespace SaveMessageGlobals$ {
    export const inboundSchema: z.ZodType<SaveMessageGlobals, z.ZodTypeDef, unknown> = z.object({
        accessToken: z.string().optional(),
    });

    export type Outbound = {
        accessToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SaveMessageGlobals> = z.object({
        accessToken: z.string().optional(),
    });
}

/** @internal */
export namespace Role$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Role> = z.nativeEnum(Role);
    export const outboundSchema: z.ZodNativeEnum<typeof Role> = inboundSchema;
}

/** @internal */
export namespace SaveMessageTimestampedMessageResponse$ {
    export const inboundSchema: z.ZodType<
        SaveMessageTimestampedMessageResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({
        role: Role$.inboundSchema,
        content: z.string(),
        timestamp: z.number().int(),
        chatId: z.number().int(),
    });

    export type Outbound = {
        role: string;
        content: string;
        timestamp: number;
        chatId: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SaveMessageTimestampedMessageResponse
    > = z.object({
        role: Role$.outboundSchema,
        content: z.string(),
        timestamp: z.number().int(),
        chatId: z.number().int(),
    });
}
