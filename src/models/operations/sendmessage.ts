/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { EventStream } from "../../lib/event-streams.js";
import { ClosedEnum } from "../../types/enums.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type SendMessageGlobals = {
    accessToken?: string | undefined;
};

export type SendMessageChatIDResponse = {
    chatId: number;
    message: string;
    /**
     * Messages to be used as AI context during response generation
     */
    messageContext?: Array<components.Message> | undefined;
};

/**
 * Unauthorized
 */
export type SendMessageMessagesResponseBody =
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

export const SendMessageResponseBodyError = {
    InvalidChatID: "Invalid chat ID",
} as const;
export type SendMessageResponseBodyError = ClosedEnum<typeof SendMessageResponseBodyError>;

export type SendMessageResponseBodyInvalidChatIdError = {
    success?: boolean | undefined;
    error: SendMessageResponseBodyError;
};

/**
 * Bad request
 */
export type SendMessageResponseBody =
    | components.BadRequestError
    | SendMessageResponseBodyInvalidChatIdError;

export type SendMessageResponse =
    | components.AccountInBadStandingError
    | EventStream<components.ChatCompletionFragment>
    | components.BadRequestError
    | SendMessageResponseBodyInvalidChatIdError
    | components.AuthenticationFailedError
    | components.UnauthorizedIdError;

/** @internal */
export const SendMessageGlobals$inboundSchema: z.ZodType<
    SendMessageGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type SendMessageGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const SendMessageGlobals$outboundSchema: z.ZodType<
    SendMessageGlobals$Outbound,
    z.ZodTypeDef,
    SendMessageGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageGlobals$ {
    /** @deprecated use `SendMessageGlobals$inboundSchema` instead. */
    export const inboundSchema = SendMessageGlobals$inboundSchema;
    /** @deprecated use `SendMessageGlobals$outboundSchema` instead. */
    export const outboundSchema = SendMessageGlobals$outboundSchema;
    /** @deprecated use `SendMessageGlobals$Outbound` instead. */
    export type Outbound = SendMessageGlobals$Outbound;
}

/** @internal */
export const SendMessageChatIDResponse$inboundSchema: z.ZodType<
    SendMessageChatIDResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    chatId: z.number().int(),
    message: z.string(),
    messageContext: z.array(components.Message$inboundSchema).optional(),
});

/** @internal */
export type SendMessageChatIDResponse$Outbound = {
    chatId: number;
    message: string;
    messageContext?: Array<components.Message$Outbound> | undefined;
};

/** @internal */
export const SendMessageChatIDResponse$outboundSchema: z.ZodType<
    SendMessageChatIDResponse$Outbound,
    z.ZodTypeDef,
    SendMessageChatIDResponse
> = z.object({
    chatId: z.number().int(),
    message: z.string(),
    messageContext: z.array(components.Message$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageChatIDResponse$ {
    /** @deprecated use `SendMessageChatIDResponse$inboundSchema` instead. */
    export const inboundSchema = SendMessageChatIDResponse$inboundSchema;
    /** @deprecated use `SendMessageChatIDResponse$outboundSchema` instead. */
    export const outboundSchema = SendMessageChatIDResponse$outboundSchema;
    /** @deprecated use `SendMessageChatIDResponse$Outbound` instead. */
    export type Outbound = SendMessageChatIDResponse$Outbound;
}

/** @internal */
export const SendMessageMessagesResponseBody$inboundSchema: z.ZodType<
    SendMessageMessagesResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.AuthenticationFailedError$inboundSchema,
    components.UnauthorizedIdError$inboundSchema,
]);

/** @internal */
export type SendMessageMessagesResponseBody$Outbound =
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const SendMessageMessagesResponseBody$outboundSchema: z.ZodType<
    SendMessageMessagesResponseBody$Outbound,
    z.ZodTypeDef,
    SendMessageMessagesResponseBody
> = z.union([
    components.AuthenticationFailedError$outboundSchema,
    components.UnauthorizedIdError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageMessagesResponseBody$ {
    /** @deprecated use `SendMessageMessagesResponseBody$inboundSchema` instead. */
    export const inboundSchema = SendMessageMessagesResponseBody$inboundSchema;
    /** @deprecated use `SendMessageMessagesResponseBody$outboundSchema` instead. */
    export const outboundSchema = SendMessageMessagesResponseBody$outboundSchema;
    /** @deprecated use `SendMessageMessagesResponseBody$Outbound` instead. */
    export type Outbound = SendMessageMessagesResponseBody$Outbound;
}

/** @internal */
export const SendMessageResponseBodyError$inboundSchema: z.ZodNativeEnum<
    typeof SendMessageResponseBodyError
> = z.nativeEnum(SendMessageResponseBodyError);

/** @internal */
export const SendMessageResponseBodyError$outboundSchema: z.ZodNativeEnum<
    typeof SendMessageResponseBodyError
> = SendMessageResponseBodyError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageResponseBodyError$ {
    /** @deprecated use `SendMessageResponseBodyError$inboundSchema` instead. */
    export const inboundSchema = SendMessageResponseBodyError$inboundSchema;
    /** @deprecated use `SendMessageResponseBodyError$outboundSchema` instead. */
    export const outboundSchema = SendMessageResponseBodyError$outboundSchema;
}

/** @internal */
export const SendMessageResponseBodyInvalidChatIdError$inboundSchema: z.ZodType<
    SendMessageResponseBodyInvalidChatIdError,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(false),
    error: SendMessageResponseBodyError$inboundSchema,
});

/** @internal */
export type SendMessageResponseBodyInvalidChatIdError$Outbound = {
    success: boolean;
    error: string;
};

/** @internal */
export const SendMessageResponseBodyInvalidChatIdError$outboundSchema: z.ZodType<
    SendMessageResponseBodyInvalidChatIdError$Outbound,
    z.ZodTypeDef,
    SendMessageResponseBodyInvalidChatIdError
> = z.object({
    success: z.boolean().default(false),
    error: SendMessageResponseBodyError$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageResponseBodyInvalidChatIdError$ {
    /** @deprecated use `SendMessageResponseBodyInvalidChatIdError$inboundSchema` instead. */
    export const inboundSchema = SendMessageResponseBodyInvalidChatIdError$inboundSchema;
    /** @deprecated use `SendMessageResponseBodyInvalidChatIdError$outboundSchema` instead. */
    export const outboundSchema = SendMessageResponseBodyInvalidChatIdError$outboundSchema;
    /** @deprecated use `SendMessageResponseBodyInvalidChatIdError$Outbound` instead. */
    export type Outbound = SendMessageResponseBodyInvalidChatIdError$Outbound;
}

/** @internal */
export const SendMessageResponseBody$inboundSchema: z.ZodType<
    SendMessageResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.BadRequestError$inboundSchema,
    z.lazy(() => SendMessageResponseBodyInvalidChatIdError$inboundSchema),
]);

/** @internal */
export type SendMessageResponseBody$Outbound =
    | components.BadRequestError$Outbound
    | SendMessageResponseBodyInvalidChatIdError$Outbound;

/** @internal */
export const SendMessageResponseBody$outboundSchema: z.ZodType<
    SendMessageResponseBody$Outbound,
    z.ZodTypeDef,
    SendMessageResponseBody
> = z.union([
    components.BadRequestError$outboundSchema,
    z.lazy(() => SendMessageResponseBodyInvalidChatIdError$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageResponseBody$ {
    /** @deprecated use `SendMessageResponseBody$inboundSchema` instead. */
    export const inboundSchema = SendMessageResponseBody$inboundSchema;
    /** @deprecated use `SendMessageResponseBody$outboundSchema` instead. */
    export const outboundSchema = SendMessageResponseBody$outboundSchema;
    /** @deprecated use `SendMessageResponseBody$Outbound` instead. */
    export type Outbound = SendMessageResponseBody$Outbound;
}

/** @internal */
export const SendMessageResponse$inboundSchema: z.ZodType<
    SendMessageResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.AccountInBadStandingError$inboundSchema,
    z.instanceof(ReadableStream<Uint8Array>).transform((stream) => {
        return new EventStream({
            stream,
            decoder(rawEvent) {
                const schema = components.ChatCompletionFragment$inboundSchema;
                return schema.parse(rawEvent);
            },
        });
    }),
    z.union([
        components.BadRequestError$inboundSchema,
        z.lazy(() => SendMessageResponseBodyInvalidChatIdError$inboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$inboundSchema,
        components.UnauthorizedIdError$inboundSchema,
    ]),
]);

/** @internal */
export type SendMessageResponse$Outbound =
    | components.AccountInBadStandingError$Outbound
    | never
    | components.BadRequestError$Outbound
    | SendMessageResponseBodyInvalidChatIdError$Outbound
    | components.AuthenticationFailedError$Outbound
    | components.UnauthorizedIdError$Outbound;

/** @internal */
export const SendMessageResponse$outboundSchema: z.ZodType<
    SendMessageResponse$Outbound,
    z.ZodTypeDef,
    SendMessageResponse
> = z.union([
    components.AccountInBadStandingError$outboundSchema,
    z.never(),
    z.union([
        components.BadRequestError$outboundSchema,
        z.lazy(() => SendMessageResponseBodyInvalidChatIdError$outboundSchema),
    ]),
    z.union([
        components.AuthenticationFailedError$outboundSchema,
        components.UnauthorizedIdError$outboundSchema,
    ]),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SendMessageResponse$ {
    /** @deprecated use `SendMessageResponse$inboundSchema` instead. */
    export const inboundSchema = SendMessageResponse$inboundSchema;
    /** @deprecated use `SendMessageResponse$outboundSchema` instead. */
    export const outboundSchema = SendMessageResponse$outboundSchema;
    /** @deprecated use `SendMessageResponse$Outbound` instead. */
    export type Outbound = SendMessageResponse$Outbound;
}
