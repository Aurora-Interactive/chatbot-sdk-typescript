/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type TtsExecuteGlobals = {
    accessToken?: string | undefined;
};

export type TtsExecuteRequestBody = {
    messageId: number;
};

/**
 * text-to-speech generation completed successfully.
 */
export type TtsExecuteSuccessfulRequest = {
    success?: boolean | undefined;
    generationId: number;
};

export type TtsExecuteResponse =
    | TtsExecuteSuccessfulRequest
    | components.DefaultBadRequest
    | components.DefaultUnauthorizedResponse
    | components.RateLimitReachedError;

/** @internal */
export const TtsExecuteGlobals$inboundSchema: z.ZodType<TtsExecuteGlobals, z.ZodTypeDef, unknown> =
    z.object({
        accessToken: z.string().optional(),
    });

/** @internal */
export type TtsExecuteGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const TtsExecuteGlobals$outboundSchema: z.ZodType<
    TtsExecuteGlobals$Outbound,
    z.ZodTypeDef,
    TtsExecuteGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsExecuteGlobals$ {
    /** @deprecated use `TtsExecuteGlobals$inboundSchema` instead. */
    export const inboundSchema = TtsExecuteGlobals$inboundSchema;
    /** @deprecated use `TtsExecuteGlobals$outboundSchema` instead. */
    export const outboundSchema = TtsExecuteGlobals$outboundSchema;
    /** @deprecated use `TtsExecuteGlobals$Outbound` instead. */
    export type Outbound = TtsExecuteGlobals$Outbound;
}

/** @internal */
export const TtsExecuteRequestBody$inboundSchema: z.ZodType<
    TtsExecuteRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    messageId: z.number().int(),
});

/** @internal */
export type TtsExecuteRequestBody$Outbound = {
    messageId: number;
};

/** @internal */
export const TtsExecuteRequestBody$outboundSchema: z.ZodType<
    TtsExecuteRequestBody$Outbound,
    z.ZodTypeDef,
    TtsExecuteRequestBody
> = z.object({
    messageId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsExecuteRequestBody$ {
    /** @deprecated use `TtsExecuteRequestBody$inboundSchema` instead. */
    export const inboundSchema = TtsExecuteRequestBody$inboundSchema;
    /** @deprecated use `TtsExecuteRequestBody$outboundSchema` instead. */
    export const outboundSchema = TtsExecuteRequestBody$outboundSchema;
    /** @deprecated use `TtsExecuteRequestBody$Outbound` instead. */
    export type Outbound = TtsExecuteRequestBody$Outbound;
}

/** @internal */
export const TtsExecuteSuccessfulRequest$inboundSchema: z.ZodType<
    TtsExecuteSuccessfulRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.boolean().default(true),
    generationId: z.number().int(),
});

/** @internal */
export type TtsExecuteSuccessfulRequest$Outbound = {
    success: boolean;
    generationId: number;
};

/** @internal */
export const TtsExecuteSuccessfulRequest$outboundSchema: z.ZodType<
    TtsExecuteSuccessfulRequest$Outbound,
    z.ZodTypeDef,
    TtsExecuteSuccessfulRequest
> = z.object({
    success: z.boolean().default(true),
    generationId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsExecuteSuccessfulRequest$ {
    /** @deprecated use `TtsExecuteSuccessfulRequest$inboundSchema` instead. */
    export const inboundSchema = TtsExecuteSuccessfulRequest$inboundSchema;
    /** @deprecated use `TtsExecuteSuccessfulRequest$outboundSchema` instead. */
    export const outboundSchema = TtsExecuteSuccessfulRequest$outboundSchema;
    /** @deprecated use `TtsExecuteSuccessfulRequest$Outbound` instead. */
    export type Outbound = TtsExecuteSuccessfulRequest$Outbound;
}

/** @internal */
export const TtsExecuteResponse$inboundSchema: z.ZodType<
    TtsExecuteResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => TtsExecuteSuccessfulRequest$inboundSchema),
    components.DefaultBadRequest$inboundSchema,
    components.DefaultUnauthorizedResponse$inboundSchema,
    components.RateLimitReachedError$inboundSchema,
]);

/** @internal */
export type TtsExecuteResponse$Outbound =
    | TtsExecuteSuccessfulRequest$Outbound
    | components.DefaultBadRequest$Outbound
    | components.DefaultUnauthorizedResponse$Outbound
    | components.RateLimitReachedError$Outbound;

/** @internal */
export const TtsExecuteResponse$outboundSchema: z.ZodType<
    TtsExecuteResponse$Outbound,
    z.ZodTypeDef,
    TtsExecuteResponse
> = z.union([
    z.lazy(() => TtsExecuteSuccessfulRequest$outboundSchema),
    components.DefaultBadRequest$outboundSchema,
    components.DefaultUnauthorizedResponse$outboundSchema,
    components.RateLimitReachedError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsExecuteResponse$ {
    /** @deprecated use `TtsExecuteResponse$inboundSchema` instead. */
    export const inboundSchema = TtsExecuteResponse$inboundSchema;
    /** @deprecated use `TtsExecuteResponse$outboundSchema` instead. */
    export const outboundSchema = TtsExecuteResponse$outboundSchema;
    /** @deprecated use `TtsExecuteResponse$Outbound` instead. */
    export type Outbound = TtsExecuteResponse$Outbound;
}
