/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type TtsRetrieveGlobals = {
    accessToken?: string | undefined;
};

export type TtsRetrieveRequest = {
    ttsGenerationId: number;
};

export type TtsRetrieveResponse =
    | components.DefaultBadRequest
    | components.DefaultUnauthorizedResponse
    | ReadableStream<Uint8Array>
    | components.RateLimitReachedError;

/** @internal */
export const TtsRetrieveGlobals$inboundSchema: z.ZodType<
    TtsRetrieveGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    accessToken: z.string().optional(),
});

/** @internal */
export type TtsRetrieveGlobals$Outbound = {
    accessToken?: string | undefined;
};

/** @internal */
export const TtsRetrieveGlobals$outboundSchema: z.ZodType<
    TtsRetrieveGlobals$Outbound,
    z.ZodTypeDef,
    TtsRetrieveGlobals
> = z.object({
    accessToken: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsRetrieveGlobals$ {
    /** @deprecated use `TtsRetrieveGlobals$inboundSchema` instead. */
    export const inboundSchema = TtsRetrieveGlobals$inboundSchema;
    /** @deprecated use `TtsRetrieveGlobals$outboundSchema` instead. */
    export const outboundSchema = TtsRetrieveGlobals$outboundSchema;
    /** @deprecated use `TtsRetrieveGlobals$Outbound` instead. */
    export type Outbound = TtsRetrieveGlobals$Outbound;
}

/** @internal */
export const TtsRetrieveRequest$inboundSchema: z.ZodType<
    TtsRetrieveRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    ttsGenerationId: z.number().int(),
});

/** @internal */
export type TtsRetrieveRequest$Outbound = {
    ttsGenerationId: number;
};

/** @internal */
export const TtsRetrieveRequest$outboundSchema: z.ZodType<
    TtsRetrieveRequest$Outbound,
    z.ZodTypeDef,
    TtsRetrieveRequest
> = z.object({
    ttsGenerationId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsRetrieveRequest$ {
    /** @deprecated use `TtsRetrieveRequest$inboundSchema` instead. */
    export const inboundSchema = TtsRetrieveRequest$inboundSchema;
    /** @deprecated use `TtsRetrieveRequest$outboundSchema` instead. */
    export const outboundSchema = TtsRetrieveRequest$outboundSchema;
    /** @deprecated use `TtsRetrieveRequest$Outbound` instead. */
    export type Outbound = TtsRetrieveRequest$Outbound;
}

/** @internal */
export const TtsRetrieveResponse$inboundSchema: z.ZodType<
    TtsRetrieveResponse,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.DefaultBadRequest$inboundSchema,
    components.DefaultUnauthorizedResponse$inboundSchema,
    z.instanceof(ReadableStream<Uint8Array>),
    components.RateLimitReachedError$inboundSchema,
]);

/** @internal */
export type TtsRetrieveResponse$Outbound =
    | components.DefaultBadRequest$Outbound
    | components.DefaultUnauthorizedResponse$Outbound
    | ReadableStream<Uint8Array>
    | components.RateLimitReachedError$Outbound;

/** @internal */
export const TtsRetrieveResponse$outboundSchema: z.ZodType<
    TtsRetrieveResponse$Outbound,
    z.ZodTypeDef,
    TtsRetrieveResponse
> = z.union([
    components.DefaultBadRequest$outboundSchema,
    components.DefaultUnauthorizedResponse$outboundSchema,
    z.instanceof(ReadableStream<Uint8Array>),
    components.RateLimitReachedError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TtsRetrieveResponse$ {
    /** @deprecated use `TtsRetrieveResponse$inboundSchema` instead. */
    export const inboundSchema = TtsRetrieveResponse$inboundSchema;
    /** @deprecated use `TtsRetrieveResponse$outboundSchema` instead. */
    export const outboundSchema = TtsRetrieveResponse$outboundSchema;
    /** @deprecated use `TtsRetrieveResponse$Outbound` instead. */
    export type Outbound = TtsRetrieveResponse$Outbound;
}
